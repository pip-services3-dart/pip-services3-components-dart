name: Pip.Services 3 Components toolkit in Dart

on: 
  push:
    paths:
    - '**'
    - '!README.md'

jobs:
  ci:
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    steps:
    - uses: actions/checkout@main
  
    ############# Prepare #############

    - name: Install prereq and save build number
      id: build_info
      uses: pip-devops/actions/dart/prepare@v1

    ############# Test #############

    - name: Test the component
      uses: pip-devops/actions/dart/test@v1

    ############# Tag #############

    - name: Delete existing tag
      uses: dev-drprasad/delete-tag-and-release@v0.1.2
      with:
        delete_release: true
        tag_name: "v${{ steps.build_info.outputs.component_version }}-${{ steps.build_info.outputs.build_number }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag branch with the build number
      uses: tvdias/github-tagger@v0.0.1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        tag: "v${{ steps.build_info.outputs.component_version }}-${{ steps.build_info.outputs.build_number }}"

    ############# Release #############

    - name: Release binary artifacts
      uses: pip-devops/actions/dart/release@v1
      with:
        pub-dev-publish-access-token: ${{ secrets.PUB_DEV_PUBLISH_ACCESS_TOKEN }}
        pub-dev-publish-refresh-token: ${{ secrets.PUB_DEV_PUBLISH_REFRESH_TOKEN }}
        pub-dev-publish-token-endpoint: ${{ secrets.PUB_DEV_PUBLISH_TOKEN_ENDPOINT }}
        pub-dev-publish-expiration: ${{ secrets.PUB_DEV_PUBLISH_EXPIRATION }}

    ############# Clear #############

    - name: Clean up
      uses: pip-devops/actions/dart/clear@v1

  metrics:
    needs: ci
    if: always()
    runs-on: ubuntu-18.04

    steps: 
    ############# Send pipeline metrics #############

    - name: Send pipeline metrics
      uses: pip-devops/actions/pipeline-metrics@v1
      with:
        pipeline-organization: $(echo '${{ github.repository }}' | awk -F '/' '{print $1}')
        pipeline-name: $(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-s3-bucket: ${{ secrets.AWS_S3_BUCKET }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    